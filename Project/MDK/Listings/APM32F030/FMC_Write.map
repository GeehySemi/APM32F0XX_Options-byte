Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    system_apm32f0xx.o(i.SystemCoreClockUpdate) refers to system_apm32f0xx.o(.data) for SystemCoreClock
    system_apm32f0xx.o(i.SystemInit) refers to system_apm32f0xx.o(i.SystemClockConfig) for SystemClockConfig
    startup_apm32f030.o(RESET) refers to startup_apm32f030.o(STACK) for __initial_sp
    startup_apm32f030.o(RESET) refers to startup_apm32f030.o(.text) for Reset_Handler
    startup_apm32f030.o(RESET) refers to apm32f0xx_int.o(i.NMI_Handler) for NMI_Handler
    startup_apm32f030.o(RESET) refers to apm32f0xx_int.o(i.HardFault_Handler) for HardFault_Handler
    startup_apm32f030.o(RESET) refers to apm32f0xx_int.o(i.SVC_Handler) for SVC_Handler
    startup_apm32f030.o(RESET) refers to apm32f0xx_int.o(i.PendSV_Handler) for PendSV_Handler
    startup_apm32f030.o(RESET) refers to apm32f0xx_int.o(i.SysTick_Handler) for SysTick_Handler
    startup_apm32f030.o(.text) refers to system_apm32f0xx.o(i.SystemInit) for SystemInit
    startup_apm32f030.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    apm32f0xx_gpio.o(i.GPIO_Reset) refers to apm32f0xx_rcm.o(i.RCM_EnableAHBPeriphReset) for RCM_EnableAHBPeriphReset
    apm32f0xx_gpio.o(i.GPIO_Reset) refers to apm32f0xx_rcm.o(i.RCM_DisableAHBPeriphReset) for RCM_DisableAHBPeriphReset
    apm32f0xx_rcm.o(i.RCM_ReadADCCLKFreq) refers to apm32f0xx_rcm.o(i.RCM_ReadPCLKFreq) for RCM_ReadPCLKFreq
    apm32f0xx_rcm.o(i.RCM_ReadHCLKFreq) refers to apm32f0xx_rcm.o(i.RCM_ReadSYSCLKFreq) for RCM_ReadSYSCLKFreq
    apm32f0xx_rcm.o(i.RCM_ReadI2C1CLKFreq) refers to apm32f0xx_rcm.o(i.RCM_ReadSYSCLKFreq) for RCM_ReadSYSCLKFreq
    apm32f0xx_rcm.o(i.RCM_ReadPCLKFreq) refers to apm32f0xx_rcm.o(i.RCM_ReadSYSCLKFreq) for RCM_ReadSYSCLKFreq
    apm32f0xx_rcm.o(i.RCM_ReadSYSCLKFreq) refers to uidiv.o(.text) for __aeabi_uidivmod
    apm32f0xx_rcm.o(i.RCM_ReadUSART1CLKFreq) refers to apm32f0xx_rcm.o(i.RCM_ReadPCLKFreq) for RCM_ReadPCLKFreq
    apm32f0xx_rcm.o(i.RCM_ReadUSART1CLKFreq) refers to apm32f0xx_rcm.o(i.RCM_ReadSYSCLKFreq) for RCM_ReadSYSCLKFreq
    apm32f0xx_rcm.o(i.RCM_ReadUSART2CLKFreq) refers to apm32f0xx_rcm.o(i.RCM_ReadPCLKFreq) for RCM_ReadPCLKFreq
    apm32f0xx_rcm.o(i.RCM_ReadUSART2CLKFreq) refers to apm32f0xx_rcm.o(i.RCM_ReadSYSCLKFreq) for RCM_ReadSYSCLKFreq
    apm32f0xx_rcm.o(i.RCM_ReadUSBCLKFreq) refers to uidiv.o(.text) for __aeabi_uidivmod
    apm32f0xx_usart.o(i.USART_Config) refers to apm32f0xx_rcm.o(i.RCM_ReadUSART1CLKFreq) for RCM_ReadUSART1CLKFreq
    apm32f0xx_usart.o(i.USART_Config) refers to apm32f0xx_rcm.o(i.RCM_ReadUSART2CLKFreq) for RCM_ReadUSART2CLKFreq
    apm32f0xx_usart.o(i.USART_Config) refers to apm32f0xx_rcm.o(i.RCM_ReadPCLKFreq) for RCM_ReadPCLKFreq
    apm32f0xx_usart.o(i.USART_Config) refers to uidiv.o(.text) for __aeabi_uidivmod
    apm32f0xx_usart.o(i.USART_Reset) refers to apm32f0xx_rcm.o(i.RCM_EnableAPB2PeriphReset) for RCM_EnableAPB2PeriphReset
    apm32f0xx_usart.o(i.USART_Reset) refers to apm32f0xx_rcm.o(i.RCM_DisableAPB2PeriphReset) for RCM_DisableAPB2PeriphReset
    apm32f0xx_usart.o(i.USART_Reset) refers to apm32f0xx_rcm.o(i.RCM_EnableAPB1PeriphReset) for RCM_EnableAPB1PeriphReset
    apm32f0xx_usart.o(i.USART_Reset) refers to apm32f0xx_rcm.o(i.RCM_DisableAPB1PeriphReset) for RCM_DisableAPB1PeriphReset
    apm32f0xx_misc.o(i.NVIC_EnableIRQRequest) refers to apm32f0xx_misc.o(i.NVIC_SetPriority) for NVIC_SetPriority
    apm32f0xx_fmc.o(i.FMC_ConfigOptionByteUser) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_ConfigReadOutProtection) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_DisableOptionByteBOOT) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_DisableOptionByteSRAMParity) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_DisableOptionByteVDDA) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_EnableOptionByteBOOT) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_EnableOptionByteSRAMParity) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_EnableOptionByteVDDA) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_EnableWriteProtection) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_EraseAllPages) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_EraseOptionByte) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_ErasePage) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_ProgramHalfWord) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_ProgramOptionByteData) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_ProgramWord) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    apm32f0xx_fmc.o(i.FMC_WaitForReady) refers to apm32f0xx_fmc.o(i.FMC_ReadState) for FMC_ReadState
    apm32f0xx_fmc.o(i.FMC_WriteOptionByteUser) refers to apm32f0xx_fmc.o(i.FMC_WaitForReady) for FMC_WaitForReady
    board.o(i.APM_MINI_COMInit) refers to apm32f0xx_rcm.o(i.RCM_EnableAHBPeriphClock) for RCM_EnableAHBPeriphClock
    board.o(i.APM_MINI_COMInit) refers to apm32f0xx_rcm.o(i.RCM_EnableAPB2PeriphClock) for RCM_EnableAPB2PeriphClock
    board.o(i.APM_MINI_COMInit) refers to apm32f0xx_rcm.o(i.RCM_EnableAPB1PeriphClock) for RCM_EnableAPB1PeriphClock
    board.o(i.APM_MINI_COMInit) refers to apm32f0xx_gpio.o(i.GPIO_ConfigPinAF) for GPIO_ConfigPinAF
    board.o(i.APM_MINI_COMInit) refers to apm32f0xx_gpio.o(i.GPIO_Config) for GPIO_Config
    board.o(i.APM_MINI_COMInit) refers to apm32f0xx_usart.o(i.USART_Config) for USART_Config
    board.o(i.APM_MINI_COMInit) refers to apm32f0xx_usart.o(i.USART_EnableInterrupt) for USART_EnableInterrupt
    board.o(i.APM_MINI_COMInit) refers to apm32f0xx_misc.o(i.NVIC_EnableIRQRequest) for NVIC_EnableIRQRequest
    board.o(i.APM_MINI_COMInit) refers to apm32f0xx_usart.o(i.USART_Enable) for USART_Enable
    board.o(i.APM_MINI_COMInit) refers to board.o(.constdata) for COM_TX_PORT_CLK
    board.o(i.APM_MINI_COMInit) refers to board.o(.data) for COM_TX_PORT
    board.o(i.APM_MINI_LEDInit) refers to apm32f0xx_rcm.o(i.RCM_EnableAHBPeriphClock) for RCM_EnableAHBPeriphClock
    board.o(i.APM_MINI_LEDInit) refers to apm32f0xx_gpio.o(i.GPIO_Config) for GPIO_Config
    board.o(i.APM_MINI_LEDInit) refers to board.o(.constdata) for GPIO_CLK
    board.o(i.APM_MINI_LEDInit) refers to board.o(.data) for GPIO_PORT
    board.o(i.APM_MINI_LEDOff) refers to board.o(.constdata) for GPIO_PIN
    board.o(i.APM_MINI_LEDOff) refers to board.o(.data) for GPIO_PORT
    board.o(i.APM_MINI_LEDOn) refers to board.o(.constdata) for GPIO_PIN
    board.o(i.APM_MINI_LEDOn) refers to board.o(.data) for GPIO_PORT
    board.o(i.APM_MINI_LEDToggle) refers to board.o(.data) for GPIO_PORT
    board.o(i.APM_MINI_LEDToggle) refers to board.o(.constdata) for GPIO_PIN
    board.o(i.APM_MINI_PBGetState) refers to apm32f0xx_gpio.o(i.GPIO_ReadInputBit) for GPIO_ReadInputBit
    board.o(i.APM_MINI_PBGetState) refers to board.o(.constdata) for BUTTON_PIN
    board.o(i.APM_MINI_PBGetState) refers to board.o(.data) for BUTTON_PORT
    board.o(i.APM_MINI_PBInit) refers to apm32f0xx_rcm.o(i.RCM_EnableAHBPeriphClock) for RCM_EnableAHBPeriphClock
    board.o(i.APM_MINI_PBInit) refers to apm32f0xx_rcm.o(i.RCM_EnableAPB2PeriphClock) for RCM_EnableAPB2PeriphClock
    board.o(i.APM_MINI_PBInit) refers to apm32f0xx_gpio.o(i.GPIO_Config) for GPIO_Config
    board.o(i.APM_MINI_PBInit) refers to apm32f0xx_eint.o(i.EINT_Config) for EINT_Config
    board.o(i.APM_MINI_PBInit) refers to apm32f0xx_misc.o(i.NVIC_EnableIRQRequest) for NVIC_EnableIRQRequest
    board.o(i.APM_MINI_PBInit) refers to board.o(.constdata) for BUTTON_CLK
    board.o(i.APM_MINI_PBInit) refers to board.o(.data) for BUTTON_PORT
    board.o(i.APM_MINI_PB_Led_Isr) refers to apm32f0xx_eint.o(i.EINT_ReadStatusFlag) for EINT_ReadStatusFlag
    board.o(i.APM_MINI_PB_Led_Isr) refers to board.o(i.APM_MINI_LEDToggle) for APM_MINI_LEDToggle
    board.o(i.APM_MINI_PB_Led_Isr) refers to apm32f0xx_eint.o(i.EINT_ClearStatusFlag) for EINT_ClearStatusFlag
    main.o(i.fputc) refers to apm32f0xx_usart.o(i.USART_TxData) for USART_TxData
    main.o(i.fputc) refers to apm32f0xx_usart.o(i.USART_ReadStatusFlag) for USART_ReadStatusFlag
    main.o(i.main) refers to board.o(i.APM_MINI_COMInit) for APM_MINI_COMInit
    main.o(i.main) refers to printf1.o(i.__0printf$1) for __2printf
    main.o(i.main) refers to apm32f0xx_fmc.o(i.FMC_ReadOptionByteUser) for FMC_ReadOptionByteUser
    main.o(i.main) refers to apm32f0xx_fmc.o(i.FMC_Unlock) for FMC_Unlock
    main.o(i.main) refers to apm32f0xx_fmc.o(i.FMC_UnlockOptionByte) for FMC_UnlockOptionByte
    main.o(i.main) refers to apm32f0xx_fmc.o(i.FMC_WriteOptionByteUser) for FMC_WriteOptionByteUser
    main.o(i.main) refers to apm32f0xx_fmc.o(i.FMC_LaunchOptionByte) for FMC_LaunchOptionByte
    main.o(i.main) refers to apm32f0xx_fmc.o(i.FMC_Lock) for FMC_Lock
    main.o(i.main) refers to apm32f0xx_fmc.o(i.FMC_LockOptionByte) for FMC_LockOptionByte
    main.o(i.main) refers to apm32f0xx_rcm.o(i.RCM_ReadStatusFlag) for RCM_ReadStatusFlag
    main.o(i.main) refers to apm32f0xx_rcm.o(i.RCM_ClearStatusFlag) for RCM_ClearStatusFlag
    main.o(i.main) refers to apm32f0xx_iwdt.o(i.IWDT_EnableWriteAccess) for IWDT_EnableWriteAccess
    main.o(i.main) refers to apm32f0xx_iwdt.o(i.IWDT_ConfigDivider) for IWDT_ConfigDivider
    main.o(i.main) refers to apm32f0xx_iwdt.o(i.IWDT_ConfigReload) for IWDT_ConfigReload
    main.o(i.main) refers to apm32f0xx_iwdt.o(i.IWDT_Refresh) for IWDT_Refresh
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to main.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to main.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to main.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to main.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to main.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to main.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to main.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to main.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to main.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to main.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to main.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to main.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to main.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to main.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to main.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to main.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to main.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to main.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to main.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to main.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to main.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to main.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to main.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to main.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to main.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to main.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to main.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to main.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to main.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to main.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to main.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to main.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to main.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to main.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to main.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to main.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to main.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to main.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to main.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to main.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to main.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to main.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to main.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to main.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_apm32f030.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_apm32f030.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing system_apm32f0xx.o(.rev16_text), (4 bytes).
    Removing system_apm32f0xx.o(.revsh_text), (4 bytes).
    Removing system_apm32f0xx.o(i.SystemCoreClockUpdate), (184 bytes).
    Removing system_apm32f0xx.o(.data), (4 bytes).
    Removing startup_apm32f030.o(HEAP), (512 bytes).
    Removing apm32f0xx_eint.o(.rev16_text), (4 bytes).
    Removing apm32f0xx_eint.o(.revsh_text), (4 bytes).
    Removing apm32f0xx_eint.o(i.EINT_ClearIntFlag), (12 bytes).
    Removing apm32f0xx_eint.o(i.EINT_ClearStatusFlag), (12 bytes).
    Removing apm32f0xx_eint.o(i.EINT_Config), (156 bytes).
    Removing apm32f0xx_eint.o(i.EINT_ConfigStructInit), (16 bytes).
    Removing apm32f0xx_eint.o(i.EINT_ReadIntFlag), (40 bytes).
    Removing apm32f0xx_eint.o(i.EINT_ReadStatusFlag), (28 bytes).
    Removing apm32f0xx_eint.o(i.EINT_Reset), (28 bytes).
    Removing apm32f0xx_eint.o(i.EINT_SelectSWInterrupt), (16 bytes).
    Removing apm32f0xx_gpio.o(.rev16_text), (4 bytes).
    Removing apm32f0xx_gpio.o(.revsh_text), (4 bytes).
    Removing apm32f0xx_gpio.o(i.GPIO_ClearBit), (4 bytes).
    Removing apm32f0xx_gpio.o(i.GPIO_ConfigPinLock), (22 bytes).
    Removing apm32f0xx_gpio.o(i.GPIO_ConfigStructInit), (22 bytes).
    Removing apm32f0xx_gpio.o(i.GPIO_ReadInputBit), (20 bytes).
    Removing apm32f0xx_gpio.o(i.GPIO_ReadInputPort), (8 bytes).
    Removing apm32f0xx_gpio.o(i.GPIO_ReadOutputBit), (20 bytes).
    Removing apm32f0xx_gpio.o(i.GPIO_ReadOutputPort), (8 bytes).
    Removing apm32f0xx_gpio.o(i.GPIO_Reset), (160 bytes).
    Removing apm32f0xx_gpio.o(i.GPIO_SetBit), (4 bytes).
    Removing apm32f0xx_gpio.o(i.GPIO_WriteBitValue), (12 bytes).
    Removing apm32f0xx_gpio.o(i.GPIO_WriteOutputPort), (4 bytes).
    Removing apm32f0xx_rcm.o(.rev16_text), (4 bytes).
    Removing apm32f0xx_rcm.o(.revsh_text), (4 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ClearIntFlag), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigAHB), (28 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigAPB), (32 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigCECCLK), (28 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigCLKDIV), (24 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigCOC), (32 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigDriveLSE), (28 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigHSE), (92 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigI2CCLK), (28 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigLSE), (76 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigPLL), (56 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigRTCCLK), (32 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigSYSCLK), (24 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigUSARTCLK), (88 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ConfigUSBCLK), (28 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableAHBPeriphClock), (16 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableAHBPeriphReset), (16 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableAPB1PeriphClock), (16 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableAPB1PeriphReset), (16 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableAPB2PeriphClock), (16 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableAPB2PeriphReset), (16 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableBackupReset), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableCCS), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableHSI), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableHSI14), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableHSI14ADC), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableHSI48), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableInterrupt), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableLSI), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisablePLL), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_DisableRTCCLK), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnableAHBPeriphReset), (16 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnableAPB1PeriphReset), (16 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnableAPB2PeriphReset), (16 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnableBackupReset), (24 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnableCCS), (24 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnableHSI), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnableHSI14), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnableHSI14ADC), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnableHSI48), (24 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnableInterrupt), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnableLSI), (20 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnablePLL), (24 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_EnableRTCCLK), (24 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ReadADCCLKFreq), (56 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ReadCECCLKFreq), (28 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ReadHCLKFreq), (60 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ReadHSI48CalibrationValue), (12 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ReadI2C1CLKFreq), (40 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ReadIntFlag), (28 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ReadSYSCLKSource), (16 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_ReadUSBCLKFreq), (108 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_Reset), (124 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_SetHSI14Trim), (28 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_SetHSITrim), (28 bytes).
    Removing apm32f0xx_rcm.o(i.RCM_WaitHSEReady), (48 bytes).
    Removing apm32f0xx_usart.o(.rev16_text), (4 bytes).
    Removing apm32f0xx_usart.o(.revsh_text), (4 bytes).
    Removing apm32f0xx_usart.o(i.USART_Address), (42 bytes).
    Removing apm32f0xx_usart.o(i.USART_ClearIntFlag), (8 bytes).
    Removing apm32f0xx_usart.o(i.USART_ClearStatusFlag), (4 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigAddressDetection), (20 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigAutoBaudRate), (24 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigAutoCount), (24 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigBlockSize), (18 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigDEPolarity), (24 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigDMAReceptionError), (24 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigDivider), (24 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigGuardTime), (30 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigIrDAMode), (20 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigLINbreakDetectLength), (20 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigMuteModeWakeUp), (24 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigOverrunDetection), (24 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigStopModeWakeUpSource), (24 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigStructInit), (24 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigSyncClock), (80 bytes).
    Removing apm32f0xx_usart.o(i.USART_ConfigSyncClockStructInit), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_DEAssertionTimeValue), (34 bytes).
    Removing apm32f0xx_usart.o(i.USART_DEDeassertionTimeValue), (34 bytes).
    Removing apm32f0xx_usart.o(i.USART_Disable), (10 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableAutoBaudRate), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableDE), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableDMA), (50 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableDataInv), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableDirectionMode), (46 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableHalfDuplex), (10 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableInterrupt), (74 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableInvPin), (60 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableIrDA), (10 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableLINmode), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableMSBFirst), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableMuteMode), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableOneBitMethod), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableOverSampling8), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableReceiverTimeOut), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableRequest), (60 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableSWAPPin), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableSmartCard), (10 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableSmartCardNACK), (10 bytes).
    Removing apm32f0xx_usart.o(i.USART_DisableStopMode), (10 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableAutoBaudRate), (14 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableDE), (14 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableDMA), (58 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableDataInv), (14 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableDirectionMode), (54 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableHalfDuplex), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableInvPin), (68 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableIrDA), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableLINmode), (14 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableMSBFirst), (14 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableMuteMode), (14 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableOneBitMethod), (14 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableOverSampling8), (14 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableReceiverTimeOut), (14 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableRequest), (70 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableSWAPPin), (14 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableSmartCard), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableSmartCardNACK), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_EnableStopMode), (12 bytes).
    Removing apm32f0xx_usart.o(i.USART_ReadIntFlag), (232 bytes).
    Removing apm32f0xx_usart.o(i.USART_ReceiverTimeOutValue), (20 bytes).
    Removing apm32f0xx_usart.o(i.USART_Reset), (216 bytes).
    Removing apm32f0xx_usart.o(i.USART_RxData), (10 bytes).
    Removing apm32f0xx_misc.o(.rev16_text), (4 bytes).
    Removing apm32f0xx_misc.o(.revsh_text), (4 bytes).
    Removing apm32f0xx_misc.o(i.NVIC_DisableIRQRequest), (24 bytes).
    Removing apm32f0xx_misc.o(i.NVIC_DisableSystemLowPower), (16 bytes).
    Removing apm32f0xx_misc.o(i.NVIC_EnableSystemLowPower), (16 bytes).
    Removing apm32f0xx_misc.o(i.PMU_EnterHaltModeWFE), (24 bytes).
    Removing apm32f0xx_misc.o(i.PMU_EnterHaltModeWFI), (24 bytes).
    Removing apm32f0xx_misc.o(i.PMU_EnterWaitMode), (20 bytes).
    Removing apm32f0xx_misc.o(i.SysTick_ConfigCLKSource), (36 bytes).
    Removing apm32f0xx_fmc.o(.rev16_text), (4 bytes).
    Removing apm32f0xx_fmc.o(.revsh_text), (4 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_ClearStatusFlag), (16 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_ConfigOptionByteUser), (108 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_ConfigReadOutProtection), (168 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_DisableInterrupt), (16 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_DisableOptionByteBOOT), (80 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_DisableOptionByteSRAMParity), (80 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_DisableOptionByteVDDA), (80 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_DisablePrefetchBuffer), (20 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_EnableInterrupt), (16 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_EnableOptionByteBOOT), (84 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_EnableOptionByteSRAMParity), (84 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_EnableOptionByteVDDA), (84 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_EnablePrefetchBuffer), (20 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_EnableWriteProtection), (128 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_EraseAllPages), (76 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_EraseOptionByte), (184 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_ErasePage), (80 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_GetReadProtectionStatus), (24 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_ProgramHalfWord), (68 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_ProgramOptionByteData), (72 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_ProgramWord), (84 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_ReadOptionByteWriteProtection), (12 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_ReadPrefetchBufferStatus), (24 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_ReadStatusFlag), (40 bytes).
    Removing apm32f0xx_fmc.o(i.FMC_SetLatency), (24 bytes).
    Removing apm32f0xx_iwdt.o(.rev16_text), (4 bytes).
    Removing apm32f0xx_iwdt.o(.revsh_text), (4 bytes).
    Removing apm32f0xx_iwdt.o(i.IWDT_ConfigWindowValue), (12 bytes).
    Removing apm32f0xx_iwdt.o(i.IWDT_DisableWriteAccess), (12 bytes).
    Removing apm32f0xx_iwdt.o(i.IWDT_Enable), (16 bytes).
    Removing apm32f0xx_iwdt.o(i.IWDT_ReadStatusFlag), (28 bytes).
    Removing board.o(.rev16_text), (4 bytes).
    Removing board.o(.revsh_text), (4 bytes).
    Removing board.o(i.APM_MINI_LEDInit), (80 bytes).
    Removing board.o(i.APM_MINI_LEDOff), (24 bytes).
    Removing board.o(i.APM_MINI_LEDOn), (24 bytes).
    Removing board.o(i.APM_MINI_LEDToggle), (36 bytes).
    Removing board.o(i.APM_MINI_PBGetState), (32 bytes).
    Removing board.o(i.APM_MINI_PBInit), (136 bytes).
    Removing board.o(i.APM_MINI_PB_Led_Isr), (46 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(i.Delay), (24 bytes).
    Removing apm32f0xx_int.o(.rev16_text), (4 bytes).
    Removing apm32f0xx_int.o(.revsh_text), (4 bytes).
    Removing dadd.o(.text), (356 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

216 unused section(s) (total 8518 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ..\..\..\..\..\Board\Board.c             0x00000000   Number         0  board.o ABSOLUTE
    ..\..\..\..\..\Library\APM32F0xx_StdPeriphDriver\src\apm32f0xx_eint.c 0x00000000   Number         0  apm32f0xx_eint.o ABSOLUTE
    ..\..\..\..\..\Library\APM32F0xx_StdPeriphDriver\src\apm32f0xx_fmc.c 0x00000000   Number         0  apm32f0xx_fmc.o ABSOLUTE
    ..\..\..\..\..\Library\APM32F0xx_StdPeriphDriver\src\apm32f0xx_gpio.c 0x00000000   Number         0  apm32f0xx_gpio.o ABSOLUTE
    ..\..\..\..\..\Library\APM32F0xx_StdPeriphDriver\src\apm32f0xx_iwdt.c 0x00000000   Number         0  apm32f0xx_iwdt.o ABSOLUTE
    ..\..\..\..\..\Library\APM32F0xx_StdPeriphDriver\src\apm32f0xx_misc.c 0x00000000   Number         0  apm32f0xx_misc.o ABSOLUTE
    ..\..\..\..\..\Library\APM32F0xx_StdPeriphDriver\src\apm32f0xx_rcm.c 0x00000000   Number         0  apm32f0xx_rcm.o ABSOLUTE
    ..\..\..\..\..\Library\APM32F0xx_StdPeriphDriver\src\apm32f0xx_usart.c 0x00000000   Number         0  apm32f0xx_usart.o ABSOLUTE
    ..\..\..\..\..\Library\Device\Geehy\APM32F0xx\Source\arm\startup_apm32f030.s 0x00000000   Number         0  startup_apm32f030.o ABSOLUTE
    ..\..\..\..\..\Library\Device\Geehy\APM32F0xx\Source\system_apm32f0xx.c 0x00000000   Number         0  system_apm32f0xx.o ABSOLUTE
    ..\..\Source\apm32f0xx_int.c             0x00000000   Number         0  apm32f0xx_int.o ABSOLUTE
    ..\..\Source\main.c                      0x00000000   Number         0  main.o ABSOLUTE
    ..\\..\\..\\..\\..\\Board\\Board.c       0x00000000   Number         0  board.o ABSOLUTE
    ..\\..\\..\\..\\..\\Library\\APM32F0xx_StdPeriphDriver\\src\\apm32f0xx_eint.c 0x00000000   Number         0  apm32f0xx_eint.o ABSOLUTE
    ..\\..\\..\\..\\..\\Library\\APM32F0xx_StdPeriphDriver\\src\\apm32f0xx_fmc.c 0x00000000   Number         0  apm32f0xx_fmc.o ABSOLUTE
    ..\\..\\..\\..\\..\\Library\\APM32F0xx_StdPeriphDriver\\src\\apm32f0xx_gpio.c 0x00000000   Number         0  apm32f0xx_gpio.o ABSOLUTE
    ..\\..\\..\\..\\..\\Library\\APM32F0xx_StdPeriphDriver\\src\\apm32f0xx_iwdt.c 0x00000000   Number         0  apm32f0xx_iwdt.o ABSOLUTE
    ..\\..\\..\\..\\..\\Library\\APM32F0xx_StdPeriphDriver\\src\\apm32f0xx_misc.c 0x00000000   Number         0  apm32f0xx_misc.o ABSOLUTE
    ..\\..\\..\\..\\..\\Library\\APM32F0xx_StdPeriphDriver\\src\\apm32f0xx_rcm.c 0x00000000   Number         0  apm32f0xx_rcm.o ABSOLUTE
    ..\\..\\..\\..\\..\\Library\\APM32F0xx_StdPeriphDriver\\src\\apm32f0xx_usart.c 0x00000000   Number         0  apm32f0xx_usart.o ABSOLUTE
    ..\\..\\..\\..\\..\\Library\\Device\\Geehy\\APM32F0xx\\Source\\system_apm32f0xx.c 0x00000000   Number         0  system_apm32f0xx.o ABSOLUTE
    ..\\..\\Source\\apm32f0xx_int.c          0x00000000   Number         0  apm32f0xx_int.o ABSOLUTE
    ..\\..\\Source\\main.c                   0x00000000   Number         0  main.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    RESET                                    0x08000000   Section      184  startup_apm32f030.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000b8   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000b8   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000bc   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000c0   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000c0   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000c0   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x080000c8   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000c8   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000c8   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x080000c8   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x080000cc   Section       28  startup_apm32f030.o(.text)
    .text                                    0x080000e8   Section        0  uidiv.o(.text)
    .text                                    0x08000114   Section       36  init.o(.text)
    i.APM_MINI_COMInit                       0x08000138   Section        0  board.o(i.APM_MINI_COMInit)
    i.FMC_LaunchOptionByte                   0x08000270   Section        0  apm32f0xx_fmc.o(i.FMC_LaunchOptionByte)
    i.FMC_Lock                               0x08000288   Section        0  apm32f0xx_fmc.o(i.FMC_Lock)
    i.FMC_LockOptionByte                     0x0800029c   Section        0  apm32f0xx_fmc.o(i.FMC_LockOptionByte)
    i.FMC_ReadOptionByteUser                 0x080002b0   Section        0  apm32f0xx_fmc.o(i.FMC_ReadOptionByteUser)
    i.FMC_ReadState                          0x080002c0   Section        0  apm32f0xx_fmc.o(i.FMC_ReadState)
    i.FMC_Unlock                             0x080002f0   Section        0  apm32f0xx_fmc.o(i.FMC_Unlock)
    i.FMC_UnlockOptionByte                   0x08000308   Section        0  apm32f0xx_fmc.o(i.FMC_UnlockOptionByte)
    i.FMC_WaitForReady                       0x08000320   Section        0  apm32f0xx_fmc.o(i.FMC_WaitForReady)
    i.FMC_WriteOptionByteUser                0x0800033c   Section        0  apm32f0xx_fmc.o(i.FMC_WriteOptionByteUser)
    i.GPIO_Config                            0x08000388   Section        0  apm32f0xx_gpio.o(i.GPIO_Config)
    i.GPIO_ConfigPinAF                       0x08000412   Section        0  apm32f0xx_gpio.o(i.GPIO_ConfigPinAF)
    i.HardFault_Handler                      0x08000458   Section        0  apm32f0xx_int.o(i.HardFault_Handler)
    i.IWDT_ConfigDivider                     0x0800045c   Section        0  apm32f0xx_iwdt.o(i.IWDT_ConfigDivider)
    i.IWDT_ConfigReload                      0x08000468   Section        0  apm32f0xx_iwdt.o(i.IWDT_ConfigReload)
    i.IWDT_EnableWriteAccess                 0x08000474   Section        0  apm32f0xx_iwdt.o(i.IWDT_EnableWriteAccess)
    i.IWDT_Refresh                           0x08000484   Section        0  apm32f0xx_iwdt.o(i.IWDT_Refresh)
    i.NMI_Handler                            0x08000494   Section        0  apm32f0xx_int.o(i.NMI_Handler)
    i.NVIC_EnableIRQRequest                  0x08000498   Section        0  apm32f0xx_misc.o(i.NVIC_EnableIRQRequest)
    i.NVIC_SetPriority                       0x080004bc   Section        0  apm32f0xx_misc.o(i.NVIC_SetPriority)
    NVIC_SetPriority                         0x080004bd   Thumb Code   110  apm32f0xx_misc.o(i.NVIC_SetPriority)
    i.PendSV_Handler                         0x08000534   Section        0  apm32f0xx_int.o(i.PendSV_Handler)
    i.RCM_ClearStatusFlag                    0x08000538   Section        0  apm32f0xx_rcm.o(i.RCM_ClearStatusFlag)
    i.RCM_EnableAHBPeriphClock               0x08000550   Section        0  apm32f0xx_rcm.o(i.RCM_EnableAHBPeriphClock)
    i.RCM_EnableAPB1PeriphClock              0x08000560   Section        0  apm32f0xx_rcm.o(i.RCM_EnableAPB1PeriphClock)
    i.RCM_EnableAPB2PeriphClock              0x08000570   Section        0  apm32f0xx_rcm.o(i.RCM_EnableAPB2PeriphClock)
    i.RCM_ReadPCLKFreq                       0x08000580   Section        0  apm32f0xx_rcm.o(i.RCM_ReadPCLKFreq)
    i.RCM_ReadSYSCLKFreq                     0x080005b4   Section        0  apm32f0xx_rcm.o(i.RCM_ReadSYSCLKFreq)
    i.RCM_ReadStatusFlag                     0x08000658   Section        0  apm32f0xx_rcm.o(i.RCM_ReadStatusFlag)
    i.RCM_ReadUSART1CLKFreq                  0x080006a8   Section        0  apm32f0xx_rcm.o(i.RCM_ReadUSART1CLKFreq)
    i.RCM_ReadUSART2CLKFreq                  0x080006f8   Section        0  apm32f0xx_rcm.o(i.RCM_ReadUSART2CLKFreq)
    i.SVC_Handler                            0x08000748   Section        0  apm32f0xx_int.o(i.SVC_Handler)
    i.SysTick_Handler                        0x0800074a   Section        0  apm32f0xx_int.o(i.SysTick_Handler)
    i.SystemClockConfig                      0x0800074c   Section        0  system_apm32f0xx.o(i.SystemClockConfig)
    SystemClockConfig                        0x0800074d   Thumb Code     2  system_apm32f0xx.o(i.SystemClockConfig)
    i.SystemInit                             0x08000750   Section        0  system_apm32f0xx.o(i.SystemInit)
    i.USART_Config                           0x080007d8   Section        0  apm32f0xx_usart.o(i.USART_Config)
    i.USART_Enable                           0x08000888   Section        0  apm32f0xx_usart.o(i.USART_Enable)
    i.USART_EnableInterrupt                  0x08000894   Section        0  apm32f0xx_usart.o(i.USART_EnableInterrupt)
    i.USART_ReadStatusFlag                   0x080008de   Section        0  apm32f0xx_usart.o(i.USART_ReadStatusFlag)
    i.USART_TxData                           0x080008f0   Section        0  apm32f0xx_usart.o(i.USART_TxData)
    i.__0printf$1                            0x080008f8   Section        0  printf1.o(i.__0printf$1)
    i.__scatterload_copy                     0x08000918   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08000926   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08000928   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x08000938   Section        0  printf1.o(i._printf_core)
    _printf_core                             0x08000939   Thumb Code   332  printf1.o(i._printf_core)
    i.fputc                                  0x08000a88   Section        0  main.o(i.fputc)
    i.main                                   0x08000aac   Section        0  main.o(i.main)
    .constdata                               0x08000b90   Section       64  board.o(.constdata)
    .data                                    0x20000000   Section       40  board.o(.data)
    .data                                    0x20000028   Section        4  stdout.o(.data)
    STACK                                    0x20000030   Section     1024  startup_apm32f030.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000b8   Number         0  startup_apm32f030.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_apm32f030.o(RESET)
    __Vectors_End                            0x080000b8   Data           0  startup_apm32f030.o(RESET)
    __main                                   0x080000b9   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000b9   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000bd   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000c1   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000c1   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000c1   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000c1   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000c9   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000c9   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080000cd   Thumb Code     8  startup_apm32f030.o(.text)
    ADC1_IRQHandler                          0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    DMA1_CH1_IRQHandler                      0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    DMA1_CH2_3_IRQHandler                    0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    DMA1_CH4_5_IRQHandler                    0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    EINT0_1_IRQHandler                       0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    EINT2_3_IRQHandler                       0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    EINT4_15_IRQHandler                      0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    FLASH_IRQHandler                         0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    I2C1_IRQHandler                          0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    I2C2_IRQHandler                          0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    RCM_IRQHandler                           0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    RTC_IRQHandler                           0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    SPI1_IRQHandler                          0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    SPI2_IRQHandler                          0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    TMR14_IRQHandler                         0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    TMR15_IRQHandler                         0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    TMR16_IRQHandler                         0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    TMR17_IRQHandler                         0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    TMR1_BRK_UP_TRG_COM_IRQHandler           0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    TMR1_CC_IRQHandler                       0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    TMR3_IRQHandler                          0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    TMR6_IRQHandler                          0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    TMR7_IRQHandler                          0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    USART1_IRQHandler                        0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    USART2_IRQHandler                        0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    USART3_6_IRQHandler                      0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    WWDT_IRQHandler                          0x080000df   Thumb Code     0  startup_apm32f030.o(.text)
    __aeabi_uidiv                            0x080000e9   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x080000e9   Thumb Code    44  uidiv.o(.text)
    __scatterload                            0x08000115   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000115   Thumb Code     0  init.o(.text)
    APM_MINI_COMInit                         0x08000139   Thumb Code   254  board.o(i.APM_MINI_COMInit)
    FMC_LaunchOptionByte                     0x08000271   Thumb Code    18  apm32f0xx_fmc.o(i.FMC_LaunchOptionByte)
    FMC_Lock                                 0x08000289   Thumb Code    16  apm32f0xx_fmc.o(i.FMC_Lock)
    FMC_LockOptionByte                       0x0800029d   Thumb Code    16  apm32f0xx_fmc.o(i.FMC_LockOptionByte)
    FMC_ReadOptionByteUser                   0x080002b1   Thumb Code    10  apm32f0xx_fmc.o(i.FMC_ReadOptionByteUser)
    FMC_ReadState                            0x080002c1   Thumb Code    42  apm32f0xx_fmc.o(i.FMC_ReadState)
    FMC_Unlock                               0x080002f1   Thumb Code    12  apm32f0xx_fmc.o(i.FMC_Unlock)
    FMC_UnlockOptionByte                     0x08000309   Thumb Code    12  apm32f0xx_fmc.o(i.FMC_UnlockOptionByte)
    FMC_WaitForReady                         0x08000321   Thumb Code    28  apm32f0xx_fmc.o(i.FMC_WaitForReady)
    FMC_WriteOptionByteUser                  0x0800033d   Thumb Code    66  apm32f0xx_fmc.o(i.FMC_WriteOptionByteUser)
    GPIO_Config                              0x08000389   Thumb Code   138  apm32f0xx_gpio.o(i.GPIO_Config)
    GPIO_ConfigPinAF                         0x08000413   Thumb Code    70  apm32f0xx_gpio.o(i.GPIO_ConfigPinAF)
    HardFault_Handler                        0x08000459   Thumb Code     2  apm32f0xx_int.o(i.HardFault_Handler)
    IWDT_ConfigDivider                       0x0800045d   Thumb Code     6  apm32f0xx_iwdt.o(i.IWDT_ConfigDivider)
    IWDT_ConfigReload                        0x08000469   Thumb Code     6  apm32f0xx_iwdt.o(i.IWDT_ConfigReload)
    IWDT_EnableWriteAccess                   0x08000475   Thumb Code     8  apm32f0xx_iwdt.o(i.IWDT_EnableWriteAccess)
    IWDT_Refresh                             0x08000485   Thumb Code     8  apm32f0xx_iwdt.o(i.IWDT_Refresh)
    NMI_Handler                              0x08000495   Thumb Code     2  apm32f0xx_int.o(i.NMI_Handler)
    NVIC_EnableIRQRequest                    0x08000499   Thumb Code    32  apm32f0xx_misc.o(i.NVIC_EnableIRQRequest)
    PendSV_Handler                           0x08000535   Thumb Code     2  apm32f0xx_int.o(i.PendSV_Handler)
    RCM_ClearStatusFlag                      0x08000539   Thumb Code    18  apm32f0xx_rcm.o(i.RCM_ClearStatusFlag)
    RCM_EnableAHBPeriphClock                 0x08000551   Thumb Code    12  apm32f0xx_rcm.o(i.RCM_EnableAHBPeriphClock)
    RCM_EnableAPB1PeriphClock                0x08000561   Thumb Code    12  apm32f0xx_rcm.o(i.RCM_EnableAPB1PeriphClock)
    RCM_EnableAPB2PeriphClock                0x08000571   Thumb Code    12  apm32f0xx_rcm.o(i.RCM_EnableAPB2PeriphClock)
    RCM_ReadPCLKFreq                         0x08000581   Thumb Code    38  apm32f0xx_rcm.o(i.RCM_ReadPCLKFreq)
    RCM_ReadSYSCLKFreq                       0x080005b5   Thumb Code   146  apm32f0xx_rcm.o(i.RCM_ReadSYSCLKFreq)
    RCM_ReadStatusFlag                       0x08000659   Thumb Code    74  apm32f0xx_rcm.o(i.RCM_ReadStatusFlag)
    RCM_ReadUSART1CLKFreq                    0x080006a9   Thumb Code    70  apm32f0xx_rcm.o(i.RCM_ReadUSART1CLKFreq)
    RCM_ReadUSART2CLKFreq                    0x080006f9   Thumb Code    70  apm32f0xx_rcm.o(i.RCM_ReadUSART2CLKFreq)
    SVC_Handler                              0x08000749   Thumb Code     2  apm32f0xx_int.o(i.SVC_Handler)
    SysTick_Handler                          0x0800074b   Thumb Code     2  apm32f0xx_int.o(i.SysTick_Handler)
    SystemInit                               0x08000751   Thumb Code   120  system_apm32f0xx.o(i.SystemInit)
    USART_Config                             0x080007d9   Thumb Code   154  apm32f0xx_usart.o(i.USART_Config)
    USART_Enable                             0x08000889   Thumb Code    12  apm32f0xx_usart.o(i.USART_Enable)
    USART_EnableInterrupt                    0x08000895   Thumb Code    74  apm32f0xx_usart.o(i.USART_EnableInterrupt)
    USART_ReadStatusFlag                     0x080008df   Thumb Code    18  apm32f0xx_usart.o(i.USART_ReadStatusFlag)
    USART_TxData                             0x080008f1   Thumb Code     8  apm32f0xx_usart.o(i.USART_TxData)
    __0printf$1                              0x080008f9   Thumb Code    24  printf1.o(i.__0printf$1)
    __1printf$1                              0x080008f9   Thumb Code     0  printf1.o(i.__0printf$1)
    __2printf                                0x080008f9   Thumb Code     0  printf1.o(i.__0printf$1)
    __scatterload_copy                       0x08000919   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08000927   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08000929   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    fputc                                    0x08000a89   Thumb Code    32  main.o(i.fputc)
    main                                     0x08000aad   Thumb Code   122  main.o(i.main)
    GPIO_PIN                                 0x08000b90   Data           4  board.o(.constdata)
    GPIO_CLK                                 0x08000b94   Data           8  board.o(.constdata)
    BUTTON_PIN                               0x08000b9c   Data           4  board.o(.constdata)
    BUTTON_CLK                               0x08000ba0   Data           8  board.o(.constdata)
    COM_USART_CLK                            0x08000ba8   Data           8  board.o(.constdata)
    COM_TX_PORT_CLK                          0x08000bb0   Data           8  board.o(.constdata)
    COM_RX_PORT_CLK                          0x08000bb8   Data           8  board.o(.constdata)
    COM_TX_PIN                               0x08000bc0   Data           4  board.o(.constdata)
    COM_RX_PIN                               0x08000bc4   Data           4  board.o(.constdata)
    COM_TX_PIN_SOURCE                        0x08000bc8   Data           2  board.o(.constdata)
    COM_RX_PIN_SOURCE                        0x08000bca   Data           2  board.o(.constdata)
    COM_TX_AF                                0x08000bcc   Data           2  board.o(.constdata)
    COM_RX_AF                                0x08000bce   Data           2  board.o(.constdata)
    Region$$Table$$Base                      0x08000bd0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08000bf0   Number         0  anon$$obj.o(Region$$Table)
    GPIO_PORT                                0x20000000   Data           8  board.o(.data)
    BUTTON_PORT                              0x20000008   Data           8  board.o(.data)
    COM_USART                                0x20000010   Data           8  board.o(.data)
    COM_TX_PORT                              0x20000018   Data           8  board.o(.data)
    COM_RX_PORT                              0x20000020   Data           8  board.o(.data)
    __stdout                                 0x20000028   Data           4  stdout.o(.data)
    __initial_sp                             0x20000430   Data           0  startup_apm32f030.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000b9

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00000c1c, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00000bf0, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000b8   Data   RO           58    RESET               startup_apm32f030.o
    0x080000b8   0x080000b8   0x00000000   Code   RO         1598  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x080000b8   0x080000b8   0x00000004   Code   RO         1864    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x080000bc   0x080000bc   0x00000004   Code   RO         1867    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x080000c0   0x080000c0   0x00000000   Code   RO         1869    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x080000c0   0x080000c0   0x00000000   Code   RO         1871    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x080000c0   0x080000c0   0x00000008   Code   RO         1872    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO         1874    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO         1876    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x080000c8   0x080000c8   0x00000004   Code   RO         1865    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x080000cc   0x080000cc   0x0000001c   Code   RO           59    .text               startup_apm32f030.o
    0x080000e8   0x080000e8   0x0000002c   Code   RO         1601    .text               mc_p.l(uidiv.o)
    0x08000114   0x08000114   0x00000024   Code   RO         1892    .text               mc_p.l(init.o)
    0x08000138   0x08000138   0x00000138   Code   RO         1432    i.APM_MINI_COMInit  board.o
    0x08000270   0x08000270   0x00000018   Code   RO         1164    i.FMC_LaunchOptionByte  apm32f0xx_fmc.o
    0x08000288   0x08000288   0x00000014   Code   RO         1165    i.FMC_Lock          apm32f0xx_fmc.o
    0x0800029c   0x0800029c   0x00000014   Code   RO         1166    i.FMC_LockOptionByte  apm32f0xx_fmc.o
    0x080002b0   0x080002b0   0x00000010   Code   RO         1170    i.FMC_ReadOptionByteUser  apm32f0xx_fmc.o
    0x080002c0   0x080002c0   0x00000030   Code   RO         1173    i.FMC_ReadState     apm32f0xx_fmc.o
    0x080002f0   0x080002f0   0x00000018   Code   RO         1176    i.FMC_Unlock        apm32f0xx_fmc.o
    0x08000308   0x08000308   0x00000018   Code   RO         1177    i.FMC_UnlockOptionByte  apm32f0xx_fmc.o
    0x08000320   0x08000320   0x0000001c   Code   RO         1178    i.FMC_WaitForReady  apm32f0xx_fmc.o
    0x0800033c   0x0800033c   0x0000004c   Code   RO         1179    i.FMC_WriteOptionByteUser  apm32f0xx_fmc.o
    0x08000388   0x08000388   0x0000008a   Code   RO          135    i.GPIO_Config       apm32f0xx_gpio.o
    0x08000412   0x08000412   0x00000046   Code   RO          136    i.GPIO_ConfigPinAF  apm32f0xx_gpio.o
    0x08000458   0x08000458   0x00000002   Code   RO         1550    i.HardFault_Handler  apm32f0xx_int.o
    0x0800045a   0x0800045a   0x00000002   PAD
    0x0800045c   0x0800045c   0x0000000c   Code   RO         1367    i.IWDT_ConfigDivider  apm32f0xx_iwdt.o
    0x08000468   0x08000468   0x0000000c   Code   RO         1368    i.IWDT_ConfigReload  apm32f0xx_iwdt.o
    0x08000474   0x08000474   0x00000010   Code   RO         1372    i.IWDT_EnableWriteAccess  apm32f0xx_iwdt.o
    0x08000484   0x08000484   0x00000010   Code   RO         1374    i.IWDT_Refresh      apm32f0xx_iwdt.o
    0x08000494   0x08000494   0x00000002   Code   RO         1551    i.NMI_Handler       apm32f0xx_int.o
    0x08000496   0x08000496   0x00000002   PAD
    0x08000498   0x08000498   0x00000024   Code   RO         1075    i.NVIC_EnableIRQRequest  apm32f0xx_misc.o
    0x080004bc   0x080004bc   0x00000078   Code   RO         1077    i.NVIC_SetPriority  apm32f0xx_misc.o
    0x08000534   0x08000534   0x00000002   Code   RO         1552    i.PendSV_Handler    apm32f0xx_int.o
    0x08000536   0x08000536   0x00000002   PAD
    0x08000538   0x08000538   0x00000018   Code   RO          233    i.RCM_ClearStatusFlag  apm32f0xx_rcm.o
    0x08000550   0x08000550   0x00000010   Code   RO          264    i.RCM_EnableAHBPeriphClock  apm32f0xx_rcm.o
    0x08000560   0x08000560   0x00000010   Code   RO          266    i.RCM_EnableAPB1PeriphClock  apm32f0xx_rcm.o
    0x08000570   0x08000570   0x00000010   Code   RO          268    i.RCM_EnableAPB2PeriphClock  apm32f0xx_rcm.o
    0x08000580   0x08000580   0x00000034   Code   RO          286    i.RCM_ReadPCLKFreq  apm32f0xx_rcm.o
    0x080005b4   0x080005b4   0x000000a4   Code   RO          287    i.RCM_ReadSYSCLKFreq  apm32f0xx_rcm.o
    0x08000658   0x08000658   0x00000050   Code   RO          289    i.RCM_ReadStatusFlag  apm32f0xx_rcm.o
    0x080006a8   0x080006a8   0x00000050   Code   RO          290    i.RCM_ReadUSART1CLKFreq  apm32f0xx_rcm.o
    0x080006f8   0x080006f8   0x00000050   Code   RO          291    i.RCM_ReadUSART2CLKFreq  apm32f0xx_rcm.o
    0x08000748   0x08000748   0x00000002   Code   RO         1553    i.SVC_Handler       apm32f0xx_int.o
    0x0800074a   0x0800074a   0x00000002   Code   RO         1554    i.SysTick_Handler   apm32f0xx_int.o
    0x0800074c   0x0800074c   0x00000002   Code   RO            3    i.SystemClockConfig  system_apm32f0xx.o
    0x0800074e   0x0800074e   0x00000002   PAD
    0x08000750   0x08000750   0x00000088   Code   RO            5    i.SystemInit        system_apm32f0xx.o
    0x080007d8   0x080007d8   0x000000b0   Code   RO          639    i.USART_Config      apm32f0xx_usart.o
    0x08000888   0x08000888   0x0000000c   Code   RO          679    i.USART_Enable      apm32f0xx_usart.o
    0x08000894   0x08000894   0x0000004a   Code   RO          686    i.USART_EnableInterrupt  apm32f0xx_usart.o
    0x080008de   0x080008de   0x00000012   Code   RO          701    i.USART_ReadStatusFlag  apm32f0xx_usart.o
    0x080008f0   0x080008f0   0x00000008   Code   RO          705    i.USART_TxData      apm32f0xx_usart.o
    0x080008f8   0x080008f8   0x00000020   Code   RO         1648    i.__0printf$1       mc_p.l(printf1.o)
    0x08000918   0x08000918   0x0000000e   Code   RO         1906    i.__scatterload_copy  mc_p.l(handlers.o)
    0x08000926   0x08000926   0x00000002   Code   RO         1907    i.__scatterload_null  mc_p.l(handlers.o)
    0x08000928   0x08000928   0x0000000e   Code   RO         1908    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x08000936   0x08000936   0x00000002   PAD
    0x08000938   0x08000938   0x00000150   Code   RO         1655    i._printf_core      mc_p.l(printf1.o)
    0x08000a88   0x08000a88   0x00000024   Code   RO         1512    i.fputc             main.o
    0x08000aac   0x08000aac   0x000000e4   Code   RO         1513    i.main              main.o
    0x08000b90   0x08000b90   0x00000040   Data   RO         1440    .constdata          board.o
    0x08000bd0   0x08000bd0   0x00000020   Data   RO         1904    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08000bf0, Size: 0x00000430, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08000bf0   0x00000028   Data   RW         1441    .data               board.o
    0x20000028   0x08000c18   0x00000004   Data   RW         1878    .data               mc_p.l(stdout.o)
    0x2000002c   0x08000c1c   0x00000004   PAD
    0x20000030        -       0x00000400   Zero   RW           56    STACK               startup_apm32f030.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       280         60          0          0          0       8025   apm32f0xx_fmc.o
       208          0          0          0          0       8477   apm32f0xx_gpio.o
        10          0          0          0          0       2319   apm32f0xx_int.o
        56         28          0          0          0       3081   apm32f0xx_iwdt.o
       156         14          0          0          0       7256   apm32f0xx_misc.o
       528         76          0          0          0       5986   apm32f0xx_rcm.o
       288         22          0          0          0       7844   apm32f0xx_usart.o
       312         58         64         40          0       4765   board.o
       264        110          0          0          0       3095   main.o
        28          8        184          0       1024        748   startup_apm32f030.o
       138         16          0          0          0      64877   system_apm32f0xx.o

    ----------------------------------------------------------------------
      2276        392        280         40       1024     116473   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
       368         12          0          0          0        168   printf1.o
         0          0          0          4          0          0   stdout.o
        44          0          0          0          0         72   uidiv.o

    ----------------------------------------------------------------------
       500         28          0          4          4        308   Library Totals
         2          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       498         28          0          4          0        308   mc_p.l

    ----------------------------------------------------------------------
       500         28          0          4          4        308   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      2776        420        280         44       1028     115261   Grand Totals
      2776        420        280         44       1028     115261   ELF Image Totals
      2776        420        280         44          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 3056 (   2.98kB)
    Total RW  Size (RW Data + ZI Data)              1072 (   1.05kB)
    Total ROM Size (Code + RO Data + RW Data)       3100 (   3.03kB)

==============================================================================

